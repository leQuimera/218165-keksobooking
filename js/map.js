'use strict';
/* data.js
 * Гененрирует список карточек заданного вида.
 * На входе не ждет ничего, содержит внутри все рандомные функции, необходимые для генерации
 * На выходе выдает массив, элеметами которого являются карточки, представленные в виде объекта.
 *
 * pin.js
 * Создает пины для массива карточек.
 * Показывает пины на карте.
 * Ловит события для пинов: клик мышкой, нажатие по enter. Соответствующе реагирует.
 * На входе ждет список карточек.
 * На выходе ыдает изображение пинов на карте в соответствии с координатами карточек.
 * Запускает ожидание события enter\click
 *
 * card.js
 * Отрисовывает карточку на карте.
 * На входе получает номер карточки.
 * Вызывается в модуле pin.js
 * На выходе выводит на карте карточку с информацией для указанного номера.
 * Запускает ожидание события click\enter по кнопке закрытия карточки.
 *
 * form.js
 * Модуль, работающий с формой создания нового объявления.
 * На входе ничего не ждет, работает автономно.
 * Отслеживает валидность полей.
 * Устанавливает взаимосвязи между полями формы.
 *
 * utils.js
 * Файл вспомогательных функций.
 * На выходе:
 * 1. isEnterPressed - Функция проверки события нажатия esc.
 * 2. isEscapePressed - Функция проверки события нажатия enter
 * 3. isClicked - Функция проверки события нажатия click
 * Каждая функция на входе получает событие, вовращает true\false соответственно
 * Функции возврата случайного значения/элемента массива
 *
 * load.js
 * Модуль загрузки данных
 * Обрабатывает возможные ошибки - ответы сервера.
 * На входе - url и функция, выполняющаяся в случае успеха.
 *
 * synchronize-fields.js
 * Базовый модуль для синхонизации полей.
 * Пример работы callback
 *
 * filter.js
 * по данным, указываемым пользователем в фильтере под картой, выбираются подходящие значения
 */

var URL = 'https://intensive-javascript-server-kjgvxfepjl.now.sh/keksobooking/data';
var onLoad = function (loadedData) {
  window.pinSet(loadedData, true);
  window.filters(loadedData);
};
window.load(URL, onLoad);

window.pinMoveSet();
